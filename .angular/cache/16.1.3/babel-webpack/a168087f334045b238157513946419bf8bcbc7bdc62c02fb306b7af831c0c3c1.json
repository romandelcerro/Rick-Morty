{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CharacterService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrlAPI = 'https://rickandmortyapi.com/api/character';\n    this.UrlEpisode = 'https://rickandmortyapi.com/api/episode/';\n  }\n  searchCharacters(query = '', page = 1) {\n    const filter = `${this.baseUrlAPI}/?name=${query}&page=${page}`;\n    return this.http.get(filter);\n  }\n  getDetails(id) {\n    return this.http.get(`${this.baseUrlAPI}/${id}`);\n  }\n  getEpisodeByCharacter(id) {\n    return this.http.get(`${this.UrlEpisode}/${id}`);\n  }\n}\nCharacterService.ɵfac = function CharacterService_Factory(t) {\n  return new (t || CharacterService)(i0.ɵɵinject(i1.HttpClient));\n};\nCharacterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CharacterService,\n  factory: CharacterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CharacterService","constructor","http","baseUrlAPI","UrlEpisode","searchCharacters","query","page","filter","get","getDetails","id","getEpisodeByCharacter","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Mario\\Desktop\\Rick-Morty\\src\\app\\shared\\services\\character.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport{HttpClient} from \"@angular/common/http\"\nimport { Character } from '../components/interfaces/character.interface';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterService {\n  \n  baseUrlAPI: string = 'https://rickandmortyapi.com/api/character';\n  UrlEpisode: string = 'https://rickandmortyapi.com/api/episode/'\n\n  constructor(private http: HttpClient) { }\n\n  searchCharacters(query='', page=1){\n    const filter = `${this.baseUrlAPI}/?name=${query}&page=${page}`;\n    return this.http.get<Character[]>(filter);\n  }\n\n  getDetails(id:number){\n    return this.http.get<Character>(`${this.baseUrlAPI}/${id}`);\n  }\n\n  getEpisodeByCharacter(id:number){\n    return this.http.get<Character>(`${this.UrlEpisode}/${id}`);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAK3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,UAAU,GAAW,2CAA2C;IAChE,KAAAC,UAAU,GAAW,0CAA0C;EAEvB;EAExCC,gBAAgBA,CAACC,KAAK,GAAC,EAAE,EAAEC,IAAI,GAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,GAAG,IAAI,CAACL,UAAU,UAAUG,KAAK,SAASC,IAAI,EAAE;IAC/D,OAAO,IAAI,CAACL,IAAI,CAACO,GAAG,CAAcD,MAAM,CAAC;EAC3C;EAEAE,UAAUA,CAACC,EAAS;IAClB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAY,GAAG,IAAI,CAACN,UAAU,IAAIQ,EAAE,EAAE,CAAC;EAC7D;EAEAC,qBAAqBA,CAACD,EAAS;IAC7B,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAY,GAAG,IAAI,CAACL,UAAU,IAAIO,EAAE,EAAE,CAAC;EAC7D;;AAlBWX,gBAAgB,C;mBAAhBA,gBAAgB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBhB,gBAAgB,C;SAAhBA,gBAAgB;EAAAiB,OAAA,EAAhBjB,gBAAgB,CAAAkB,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}